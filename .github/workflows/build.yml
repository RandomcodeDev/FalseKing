# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: ${{matrix.config}}-${{matrix.target}} build on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        config: [Debug, Release]
        target: [x64]
        os: [
            windows-latest,
#           macOS-latest,
            ubuntu-latest
        ]

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: true

    - name: Add MSBuild to PATH
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Decode signing key
      shell: bash
      working-directory: ${{env.GITHUB_WORKSPACE}}
      env:
        GAME_PFX_BASE64: ${{secrets.GAME_PFX_BASE64}}
      run: |
        printf "$GAME_PFX_BASE64" > Game_TemporaryKey.pfx.base64
        base64 -d Game_TemporaryKey.pfx.base64 > Game_TemporaryKey.pfx

    - name: Build (MSBuild)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: matrix.os == 'windows-latest'
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.config}} /p:Platform=${{matrix.target}} Game.sln /t:"Build;Publish"

    - name: Install system dependencies
      if: matrix.os != 'windows-latest'
      run: sudo apt install -y bmake

    - name: chmod scripts
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: matrix.os != 'windows-latest'
      run: chmod a+x scripts/*.sh

    - name: Build (Make)
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: matrix.os != 'windows-latest'
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: scripts/build.sh ${{matrix.target}} ${{matrix.config}}

    - name: Distrib
      working-directory: ${{env.GITHUB_WORKSPACE}}
      if: matrix.os != 'windows-latest'
      run: scripts/distrib.sh FalseKing-${{matrix.config}}-${{matrix.os}}-${{matrix.target}} ${{matrix.target}} ${{matrix.config}} Game
      
    - name: Upload a Build Artifact (MSBuild Debug)
      uses: actions/upload-artifact@v3.1.2
      if: matrix.os == 'windows-latest' && matrix.config == 'Debug'
      with:
        name: FalseKing-${{matrix.config}}-${{matrix.os}}-${{matrix.target}}
        path: AppPackages/Game/Game_1.0.0.0_Debug_Test/Game_1.0.0.0_${{matrix.target}}_Debug.msixbundle
      
    - name: Upload a Build Artifact (MSBuild Release)
      uses: actions/upload-artifact@v3.1.2
      if: matrix.os == 'windows-latest' && matrix.config == 'Release'
      with:
        name: FalseKing-${{matrix.config}}-${{matrix.os}}-${{matrix.target}}
        path: AppPackages/Game/Game_1.0.0.0_Debug_Test/Game_1.0.0.0_${{matrix.target}}.msixbundle
        
    - name: Upload a Build Artifact (Make)
      uses: actions/upload-artifact@v3.1.2
      if: matrix.os != 'windows-latest'
      with:
        name: FalseKing-${{matrix.config}}-${{matrix.os}}-${{matrix.target}}
        path: Game.tar.xz
